item-app-1  | 
item-app-1  | > docker-software-delivery@1.0.0 start /app
item-app-1  | > node ./bin/www
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=0dcd47c02999
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] modules: none
item-app-1  | 
item-app-1  | NODE_ENV: production
item-app-1  | Connected to database
item-app-1  | [0mGET / [32m200 [0m190.951 ms - 785[0m
item-app-1  | [0mGET /javascripts/dist/dist.min.js [32m200 [0m22.741 ms - 186999[0m
item-app-1  | [0mGET /stylesheets/style.css [32m200 [0m28.889 ms - 519[0m
item-app-1  | [0mGET /api [32m200 [0m6.514 ms - 2[0m
item-app-1  | [0mPOST /api [32m201 [0m61.964 ms - 51[0m
item-app-1  | [0mPOST /api [32m201 [0m48.017 ms - 52[0m
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] build environment:
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db-1   | 2024-02-25T06:34:22.662+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true } }
item-db-1   | 2024-02-25T06:34:22.663+0000 I STORAGE  [initandlisten] 
item-db-1   | 2024-02-25T06:34:22.663+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db-1   | 2024-02-25T06:34:22.663+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db-1   | 2024-02-25T06:34:22.663+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3446M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db-1   | 2024-02-25T06:34:23.113+0000 I STORAGE  [initandlisten] WiredTiger message [1708842863:113642][1:0x7f9762431a40], txn-recover: Set global recovery timestamp: 0
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] 
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] 
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] 
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
item-db-1   | 2024-02-25T06:34:23.134+0000 I CONTROL  [initandlisten] 
item-db-1   | 2024-02-25T06:34:23.134+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: 592af029-9725-4774-9500-bd02a912d178
item-db-1   | 2024-02-25T06:34:23.147+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.6
item-db-1   | 2024-02-25T06:34:23.148+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 0f2b59e6-7da5-4488-80fc-c188ae760181
item-db-1   | 2024-02-25T06:34:23.158+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db-1   | 2024-02-25T06:34:23.158+0000 I NETWORK  [initandlisten] listening via socket bound to 0.0.0.0
item-db-1   | 2024-02-25T06:34:23.158+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db-1   | 2024-02-25T06:34:23.158+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db-1   | 2024-02-25T06:34:23.158+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: 657ace43-dd74-43f6-aaf2-1c931f549bf4
item-db-1   | 2024-02-25T06:34:23.175+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
item-db-1   | 2024-02-25T06:34:23.175+0000 I INDEX    [LogicalSessionCacheRefresh] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
item-db-1   | 2024-02-25T06:34:23.175+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
item-db-1   | 2024-02-25T06:34:23.636+0000 I NETWORK  [listener] connection accepted from 172.21.0.3:42286 #1 (1 connection now open)
item-db-1   | 2024-02-25T06:34:23.643+0000 I NETWORK  [conn1] received client metadata from 172.21.0.3:42286 conn1: { driver: { name: "nodejs", version: "2.2.36" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "5.15.133.1-microsoft-standard-WSL2" }, platform: "Node.js v14.21.3, LE, mongodb-core: 2.1.20" }
item-db-1   | 2024-02-25T06:34:40.182+0000 I STORAGE  [conn1] createCollection: accumulator.documents with generated UUID: 47839a59-090b-4c89-9fe8-32ce280e5c41
